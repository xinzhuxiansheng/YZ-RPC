<?xml version="1.0" encoding="UTF-8"?>
<!-- status : 这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成trace时,会看到log4j2内部各种详细输出 monitorInterval 
	: Log4j能够自动检测修改配置文件和重新配置本身, 设置间隔秒数。 注：本配置文件的目标是将不同级别的日志输出到不同文件，最大2MB一个文件， 
	文件数据达到最大值时，旧数据会被压缩并放进指定文件夹 -->
<Configuration status="WARN" monitorInterval="600">

	<Properties>
		<!-- 配置日志文件输出目录，此配置将日志输出到tomcat根目录下的指定文件夹 -->
		<Property name="LOG_HOME">logs</Property>
	</Properties>

	<Appenders>

		<!--这个输出控制台的配置，这里输出除了warn和error级别的信息到System.out -->
		<Console name="console_out_appender" target="SYSTEM_OUT">
			<!-- 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) -->
			<ThresholdFilter level="warn" onMatch="DENY"
				onMismatch="ACCEPT" />
			<!-- 输出日志的格式 -->
			<PatternLayout charset="UTF-8" pattern="%-d{yyyy-MM-dd HH:mm:ss}  [ %F:%L ] - [ %p ]  %m%n" />
		</Console>
		<!--这个输出控制台的配置，这里输出warn和error级别的信息到System.err，在eclipse控制台上看到的是红色文字 -->
		<Console name="console_err_appender" target="SYSTEM_ERR">
			<!-- 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) -->
			<ThresholdFilter level="warn" onMatch="ACCEPT"
				onMismatch="DENY" />
			<!-- 输出日志的格式 -->
			<PatternLayout charset="UTF-8" pattern="%-d{yyyy-MM-dd HH:mm:ss}  [ %F:%L ] - [ %p ]  %m%n" />
		</Console>

		<!-- TRACE级别日志 -->
		<!-- 设置日志格式并配置日志压缩格式，压缩文件独立放在一个文件夹内， 日期格式不能为冒号，否则无法生成，因为文件名不允许有冒号，此appender只输出trace级别的数据到trace.log -->
		<RollingRandomAccessFile name="trace_appender"
			immediateFlush="true" fileName="${LOG_HOME}/trace/trace.log"
			filePattern="${LOG_HOME}/trace/trace.%d{yyyy-MM-dd}-%i.log">
			<PatternLayout charset="UTF-8">
				<pattern>%-d{yyyy-MM-dd HH:mm:ss} [ %F:%L ] - [ %p ] %m%n</pattern>
			</PatternLayout>
			<Policies><!-- 两个配置任选其一 -->
				<!-- 每个日志文件最大250MB -->
				<SizeBasedTriggeringPolicy size="250MB" />
			</Policies>
			<Filters><!-- 此Filter意思是，只输出debug级别的数据 -->
				<!-- DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； ACCEPT，日志会被立即处理，不再经过剩余过滤器。 -->
				<ThresholdFilter level="debug" onMatch="DENY"
					onMismatch="NEUTRAL" />
				<ThresholdFilter level="trace" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
		</RollingRandomAccessFile>

		<!-- DEBUG级别日志 -->
		<!-- 设置日志格式并配置日志压缩格式，压缩文件独立放在一个文件夹内， 日期格式不能为冒号，否则无法生成，因为文件名不允许有冒号，此appender只输出debug级别的数据到debug.log -->
		<RollingRandomAccessFile name="debug_appender"
			immediateFlush="true" fileName="${LOG_HOME}/debug/debug.log"
			filePattern="${LOG_HOME}/debug/debug.%d{yyyy-MM-dd}-%i.log">
			<PatternLayout charset="UTF-8">
				<pattern>%-d{yyyy-MM-dd HH:mm:ss} [ %F:%L ] - [ %p ] %m%n</pattern>
			</PatternLayout>
			<Policies><!-- 两个配置任选其一 -->

				<!-- 每个日志文件最大250MB -->
				<SizeBasedTriggeringPolicy size="250MB" />

				<!-- 如果启用此配置，则日志会按文件名生成新压缩文件， 即如果filePattern配置的日期格式为 %d{yyyy-MM-dd HH} 
					，则每小时生成一个压缩文件， 如果filePattern配置的日期格式为 %d{yyyy-MM-dd} ，则天生成一个压缩文件 -->
				<!-- <TimeBasedTriggeringPolicy interval="1" modulate="true" /> -->

			</Policies>
			<Filters><!-- 此Filter意思是，只输出debug级别的数据 -->
				<!-- DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； ACCEPT，日志会被立即处理，不再经过剩余过滤器。 -->
				<ThresholdFilter level="info" onMatch="DENY"
					onMismatch="NEUTRAL" />
				<ThresholdFilter level="debug" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
		</RollingRandomAccessFile>

		<!-- INFO级别日志 -->
		<RollingRandomAccessFile name="info_appender"
			immediateFlush="true" fileName="${LOG_HOME}/info/info.log"
			filePattern="${LOG_HOME}/info/info.%d{yyyy-MM-dd}-%i.log">
			<PatternLayout charset="UTF-8">
				<pattern>%-d{yyyy-MM-dd HH:mm:ss} [ %F:%L ] - [ %p ] %m%n</pattern>
			</PatternLayout>
			<Policies>
				<SizeBasedTriggeringPolicy size="250MB" />
			</Policies>
			<Filters>
				<ThresholdFilter level="warn" onMatch="DENY"
					onMismatch="NEUTRAL" />
				<ThresholdFilter level="info" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
		</RollingRandomAccessFile>

		<!-- WARN级别日志 -->
		<RollingRandomAccessFile name="warn_appender"
			immediateFlush="true" fileName="${LOG_HOME}/warn/warn.log"
			filePattern="${LOG_HOME}/warn/warn.%d{yyyy-MM-dd}-%i.log">
			<PatternLayout charset="UTF-8">
				<pattern>%-d{yyyy-MM-dd HH:mm:ss} [ %F:%L ] - [ %p ] %m%n</pattern>
			</PatternLayout>
			<Policies>
				<SizeBasedTriggeringPolicy size="250MB" />
			</Policies>
			<Filters>
				<ThresholdFilter level="error" onMatch="DENY"
					onMismatch="NEUTRAL" />
				<ThresholdFilter level="warn" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
		</RollingRandomAccessFile>

		<!-- ERROR级别日志 -->
		<RollingRandomAccessFile name="error_appender"
			immediateFlush="true" fileName="${LOG_HOME}/error/error.log"
			filePattern="${LOG_HOME}/error/error.%d{yyyy-MM-dd}-%i.log">
			<PatternLayout charset="UTF-8">
				<pattern>%-d{yyyy-MM-dd HH:mm:ss} [ %F:%L ] - [ %p ] %m%n</pattern>
			</PatternLayout>
			<Policies>
				<SizeBasedTriggeringPolicy size="250MB" />
			</Policies>
			<Filters>
				<ThresholdFilter level="error" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
		</RollingRandomAccessFile>
	</Appenders>

	<Loggers>
		<!-- 配置日志的根节点 -->
		<root level="info">
			<appender-ref ref="console_out_appender" />
			<appender-ref ref="console_err_appender" />
			<appender-ref ref="trace_appender" />
			<appender-ref ref="debug_appender" />
			<appender-ref ref="info_appender" />
			<appender-ref ref="warn_appender" />
			<appender-ref ref="error_appender" />
		</root>

		<!-- 第三方日志系统 -->
		<logger name="org.springframework.core" level="info"  additivity="false" />
		<logger name="org.springframework.beans" level="info"  additivity="false" />
		<logger name="org.springframework.context" level="info"  additivity="false" />
		<logger name="org.springframework.web" level="info"  additivity="false"/>
		<logger name="org.jboss.netty" level="warn" additivity="false" />
		<logger name="org.apache.http" level="warn" additivity="false" />
		<logger name="com.alibaba.druid.pool.DruidDataSource" level="info" additivity="false" />
		
		 <!-- druid配置 -->
        <logger name="druid.sql.Statement" level="debug" additivity="false">
            <appender-ref ref="console_out_appender"/>
        </logger>
        <logger name="druid.sql.ResultSet" level="debug" additivity="false">
            <appender-ref ref="console_out_appender"/>
        </logger>
	</Loggers>

</Configuration>